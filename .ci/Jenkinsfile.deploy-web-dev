pipeline {
    agent {
        node {
            label 'jenkins-main'
        }
    }
    parameters {
        gitParameter branchFilter: 'origin/(.*)', defaultValue: 'dev', name: 'sha1', type: 'PT_BRANCH', quickFilterEnabled: true
    }
    stages {
        stage('Web: build') {     
            steps {
                script {
                    env.VERSION = sh script: "cat version.json | jq .version | tr -d '\"\n'", returnStdout: true
                    currentBuild.displayName = "#${BUILD_NUMBER}_deploy_${VERSION}"
                    dir('web') {
                        sh "make build ENV=dev REACT_APP_ISDOCKEREXT=false"
                    }
                }
            }
        }
        stage('Web: deploy') {
            steps {
                script {
                    env.BUCKET_VERSION = env.VERSION.replaceAll("[^a-zA-Z0-9 ]+","-")
                    dir('web') {
                        sh "aws s3api create-bucket --bucket app-${BUCKET_VERSION} --region eu-west-2 --acl public-read --create-bucket-configuration LocationConstraint=eu-west-2"
                        sh "aws s3 website s3://app-${BUCKET_VERSION} --index-document index.html --error-document error.html"
                        sh "sed 's/BUCKET_NAME/app-$BUCKET_VERSION/g' ../.ci/s3/policy.json.template > policy.json"
                        sh "aws s3api put-bucket-policy --bucket s3://app-${BUCKET_VERSION} --policy file://policy.json"
                        sh "aws s3 sync build/ s3://app-${BUCKET_VERSION}"
                    }
                }
            }
            post {
                always {
                    cleanWs()
                }
            }
        }
    }
}
