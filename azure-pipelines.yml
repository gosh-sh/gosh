trigger:
- azure-pipelines

strategy:
  matrix:
#    linux:
#      imageName: "ubuntu-20.04"
#    mac:
#      imageName: "macOS-12"
    windows:
      imageName: "windows-2019"
  maxParallel: 3

pool:
  vmImage: $(imageName)

steps:
# Linux
- bash: |
    sudo apt install -y protobuf-compiler
  condition: eq( variables['Agent.OS'], 'Linux' )
# Mac
- bash: |
    brew install protobuf
  condition: eq( variables['Agent.OS'], 'Darwin' )
# Windows
- bash: |
    choco install protoc openssl
  condition: eq( variables['Agent.OS'], 'Windows_NT' )

- script: |
    curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.66.0
  displayName: Install rust
  condition: ne( variables['Agent.OS'], 'Windows_NT' )
- script: |
    curl -sSf -o rustup-init.exe https://win.rustup.rs
    rustup-init.exe -y --default-toolchain 1.66.0    
  displayName: Windows install rust
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  
- bash: |
    mkdir -p ./resources
    cp ../contracts/gosh/*.abi.json ./resources/
    cargo build --release
  workingDirectory: git-remote-gosh