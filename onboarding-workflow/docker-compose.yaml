version: '3.8'

services:
  redis:
    container_name: redis
    image: redis
    restart: always
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 1s
      timeout: 3s
      retries: 5

  # TODO: uncomment when everything is ready
  # send_email:
  #   image: gosh-onboarding
  #   restart: always
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     SUPABASE_URL: ${SUPABASE_URL}
  #     SUPABASE_KEY: ${SUPABASE_KEY}
  #     REDIS_URL: redis://redis:6379
  #     SYSTEM_CONTRACT_ADDR: ${SYSTEM_CONTRACT_ADDR}
  #     GOSH_ENDPOINTS: ${GOSH_ENDPOINTS}
  #     EMAIL_USERNAME: ${EMAIL_USERNAME}
  #     EMAIL_PASSWORD: ${EMAIL_PASSWORD}
  #     EMAIL_FROM: ${EMAIL_FROM}
  #   command: >
  #     deno run -A ./src/send_email_scheduler.ts

  create_dao_bot:
    image: gosh-onboarding
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      SYSTEM_CONTRACT_ADDR: ${SYSTEM_CONTRACT_ADDR}
      GOSH_ENDPOINTS: ${GOSH_ENDPOINTS}
      REDIS_URL: redis://redis:6379
    command: >
      deno run -A ./src/create_dao_bot_scheduler.ts

  create_dao:
    image: gosh-onboarding
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      REDIS_URL: redis://redis:6379
      SYSTEM_CONTRACT_ADDR: ${SYSTEM_CONTRACT_ADDR}
      GOSH_ENDPOINTS: ${GOSH_ENDPOINTS}
    command: >
      deno run -A ./src/create_dao_scheduler.ts

  ready_users:
    image: gosh-onboarding
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      REDIS_URL: redis://redis:6379
      SYSTEM_CONTRACT_ADDR: ${SYSTEM_CONTRACT_ADDR}
      GOSH_ENDPOINTS: ${GOSH_ENDPOINTS}
    command: >
      deno run -A ./src/ready_users_scheduler.ts

  consumer_check_account:
    image: gosh-onboarding
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      REDIS_URL: redis://redis:6379
      SYSTEM_CONTRACT_ADDR: ${SYSTEM_CONTRACT_ADDR}
      GOSH_ENDPOINTS: ${GOSH_ENDPOINTS}
    command: >
      deno run -A ./src/consumers/check_account.ts

  consumer_check_wallet_access:
    image: gosh-onboarding
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      REDIS_URL: redis://redis:6379
      SYSTEM_CONTRACT_ADDR: ${SYSTEM_CONTRACT_ADDR}
      GOSH_ENDPOINTS: ${GOSH_ENDPOINTS}
    command: >
      deno run -A ./src/consumers/check_wallet_access.ts

  consumer_create_gosh_repo:
    image: gosh-onboarding
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - './logs:/tmp/logs'
    environment:
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      REDIS_URL: redis://redis:6379
      SYSTEM_CONTRACT_ADDR: ${SYSTEM_CONTRACT_ADDR}
      GOSH_ENDPOINTS: ${GOSH_ENDPOINTS}
    command: >
      deno run -A ./src/consumers/create_gosh_repo.ts
